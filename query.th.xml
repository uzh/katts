<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<query xmlns="http://uzh.ch/ddis/katts/query">

  <heartBeat interval="100" />

  <fileSource id="tickerSource">
    <files>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files0.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files1.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files2.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files3.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files4.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files5.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files6.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files7.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files8.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/ticker_files/ticker_files9.csv.gz"/>
    </files>
  </fileSource>
    
    
  <fileSource id="contractSource">
    <files>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts0.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts1.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts2.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts3.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts4.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts5.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts6.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts7.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts8.csv.gz"/>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/contracts_files/contracts9.csv.gz"/>
    </files> 
  </fileSource>
    
    <!--<fileSource id="tickerSource">
    <files>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/2001_7ticker_wrds_crsp.sorted.triples"/>
    </files>
  </fileSource>
    
    
  <fileSource id="contractSource">
    <files>
      <file csvFieldDelimiter="," mimeType="text/comma-separated-values" path="/home/torque/tmp/katts_data_hunziker/2001_5contracts.sorted.triples"/>
    </files> 
  </fileSource>-->
    
    

  <!-- Pre-Filters for the ticker data -->
  <tripleFilter groupOn="subject" applyOnSource="tickerSource" id="TripleFilter_TickerPRC">
    <conditions>
      <condition restriction="PRC" item="predicate" />
    </conditions>
    <produces>
      <stream id="tickerPrice">
        <variable type="xs:double" name="ticker_price" referencesTo="object" />
        <variable type="xs:string" name="ticker_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>
  <tripleFilter groupOn="subject" applyOnSource="tickerSource" id="TripleFilter_TickerCOMNAM">
    <conditions>
      <condition restriction="COMNAM" item="predicate" />
    </conditions>
    <produces>
      <stream id="tickerCompanyName">
        <variable type="xs:string" name="company_name" referencesTo="object" />
        <variable type="xs:string" name="ticker_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>
  <tripleFilter groupOn="subject" applyOnSource="tickerSource" id="TripleFilter_TICKER">
    <conditions>
      <condition restriction="TICKER" item="predicate" />
    </conditions>
    <produces>
      <stream id="tickerSymbol">
        <variable type="xs:string" name="ticker_symbol" referencesTo="object" />
        <variable type="xs:string" name="ticker_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>

  <!-- Pre-Filters for contract data -->
  <tripleFilter groupOn="subject" applyOnSource="contractSource" id="TripleFilter_ContractAgency">
    <conditions>
      <condition restriction="agencyid" item="predicate" />
    </conditions>
    <produces>
      <stream id="contractAgency">
        <variable type="xs:string" name="agency_name" referencesTo="object" />
        <variable type="xs:string" name="contract_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>
  <tripleFilter groupOn="subject" applyOnSource="contractSource" id="TripleFilter_ContractAmount">
    <conditions>
      <condition restriction="obligatedamount" item="predicate" />
    </conditions>
    <produces>
      <stream id="contractAmount">
        <variable type="xs:double" name="contract_amount" referencesTo="object" />
        <variable type="xs:string" name="contract_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>
  <tripleFilter groupOn="subject" applyOnSource="contractSource" id="TripleFilter_ContractCompany">
    <conditions>
      <condition restriction="vendorname" item="predicate" />
    </conditions>
    <produces>
      <stream id="contractCompany">
        <variable type="xs:string" name="company_name" referencesTo="object" />
        <variable type="xs:string" name="contract_id" referencesTo="subject" />
      </stream>
    </produces>
  </tripleFilter>
  
    <oneFieldJoin maxBufferSize="20" joinPrecision="20000" joinOn="ticker_id" id="Ticker_Join">
    <consumes>
      <stream maxBufferSize="5" streamId="tickerSymbol">
        <variableGrouping>
          <groupOn variableName="ticker_id" />
        </variableGrouping>
      </stream>
      <stream maxBufferSize="5" streamId="tickerPrice">
        <variableGrouping>
          <groupOn variableName="ticker_id" />
        </variableGrouping>
      </stream>
      <stream maxBufferSize="5" streamId="tickerCompanyName">
        <variableGrouping>
          <groupOn variableName="ticker_id" />
        </variableGrouping>
      </stream>
    </consumes>
    <produces>
      <stream id="tickerStream">
        <variable type="xs:string" name="ticker_symbol" referencesTo="ticker_symbol" />
        <variable type="xs:double" name="ticker_price" referencesTo="ticker_price" />
        <variable type="xs:string" name="company_name" referencesTo="company_name" />
      </stream>
    </produces>
  </oneFieldJoin>
    
  <oneFieldJoin maxBufferSize="20" joinPrecision="20000" joinOn="contract_id" id="Contract_Join">
    <consumes>
      <stream maxBufferSize="5" streamId="contractAgency">
        <variableGrouping>
          <groupOn variableName="contract_id" />
        </variableGrouping>
      </stream>
      <stream maxBufferSize="5" streamId="contractAmount">
        <variableGrouping>
          <groupOn variableName="contract_id" />
        </variableGrouping>
      </stream>
      <stream maxBufferSize="5" streamId="contractCompany">
        <variableGrouping>
          <groupOn variableName="contract_id" />
        </variableGrouping>
      </stream>
    </consumes>
    <produces>
      <stream id="contractStream">
        <variable type="xs:string" name="contract_id" referencesTo="contract_id" />
        <variable type="xs:double" name="contract_amount" referencesTo="contract_amount" />
        <variable type="xs:string" name="company_name" referencesTo="company_name" />
        <variable type="xs:string" name="contract_agency" referencesTo="agency_name" />
      </stream>
    </produces>
    </oneFieldJoin>


  <partitioner slideSize="P1D" windowSize="P20D" partitionOn="ticker_symbol" aggregateOn="ticker_price" id="Partitioner">
    <consumes>
      <stream maxBufferSize="5" streamId="tickerStream">
        <variableGrouping>
          <groupOn variableName="ticker_symbol" />
        </variableGrouping>
      </stream>
    </consumes>
    <produces>
      <stream inheritFrom="tickerStream" id="tickerStreamMinMax">
        <variable type="xs:double" name="ticker_min" referencesTo="min" />
        <variable type="xs:double" name="ticker_max" referencesTo="max" />
      </stream>
    </produces>
    <components>
      <minPartitioner />
      <maxPartitioner />
    </components>
  </partitioner>

  <expressionFunction expression="#ticker_max / #ticker_min" id="expressionFunction">
    <consumes>
      <stream maxBufferSize="5" streamId="tickerStreamMinMax">
        <variableGrouping>
          <groupOn variableName="ticker_symbol" />
        </variableGrouping>
      </stream>
    </consumes>
    <produces>
      <stream inheritFrom="tickerStreamMinMax" id="tickerStreamfct">
        <variable type="xs:double" name="ticker_fct" referencesTo="result" />
      </stream>
    </produces>
  </expressionFunction>

  <expressionFilter expression="#ticker_fct > 2" id="expressionFilter">
    <consumes>
      <stream maxBufferSize="5" streamId="tickerStreamfct">
        <variableGrouping>
          <groupOn variableName="ticker_symbol" />
        </variableGrouping>
      </stream>
    </consumes>
    <produces>
      <stream inheritFrom="tickerStreamfct" id="filteredTickerStream" />
    </produces>
  </expressionFilter>

  <temporalJoin id="TemporalJoin_TickerAndContractData" parallelismWeight="10">
    <consumes>
      <stream maxBufferSize="5" streamId="contractStream">
        <variableGrouping>
          <groupOn variableName="company_name" />
        </variableGrouping>
      </stream>
      <stream maxBufferSize="5" streamId="filteredTickerStream">
        <variableGrouping>
          <groupOn variableName="company_name" />
        </variableGrouping>
      </stream>
    </consumes>

    <evictBefore>
      <evict from="filteredTickerStream" on="filteredTickerStream" if="#from.endDate lt #on.endDate" />
      <evict from="contractStream" on="filteredTickerStream" if="#from.endDate lt #on.startDate" />
      <evict from="filteredTickerStream" on="contractStream" if="#from.startDate lt #on.startDate" />
      <evict from="contractStream" on="contractStream" if="(#from.endDate + 20 * 24 * 3600 * 1000) lt #on.startDate" />
    </evictBefore>

    <sameValue onField="company_name" />

    <produces>
      <stream id="tickerAndContractStream">
        <variable type="xs:string" name="ticker_symbol" referencesTo="ticker_symbol" />
        <variable type="xs:string" name="company_name" referencesTo="company_name" />
        <variable type="xs:string" name="ticker_fct" referencesTo="ticker_fct" />
      </stream>
    </produces>
  </temporalJoin>

    <fileOutput filePath="$KATTS_JOB_FOLDER/evaluation/output.csv" id="fileOutput">
        <consumes>
            <stream maxBufferSize="5" streamId="tickerAndContractStream">
                <shuffleGrouping/>
            </stream>
        </consumes>
    </fileOutput>

    <termination />
   
</query>
